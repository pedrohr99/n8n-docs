{
  "name": "medium_articles_es_summary_gpt5_mini",
  "nodes": [
    {
      "id": "exec-trigger",
      "name": "When executed by another node",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [-1200, 200],
      "typeVersion": 1
    },
    {
      "id": "fetch-html",
      "name": "Fetch Medium HTML",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [-980, 200],
      "parameters": {
        "url": "={{$json[\"url\"]}}",
        "responseFormat": "string",
        "options": {
          "redirect": { "followRedirects": true },
          "headers": {
            "headers": [
              { "name": "User-Agent", "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124 Safari/537.36" }
            ]
          },
          "timeout": 15000
        }
      }
    },
    {
      "id": "extract",
      "name": "Extract Title + Text",
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [-760, 200],
      "parameters": {
        "operation": "extractHtmlContent",
        "dataPropertyName": "data",
        "extractionValues": {
          "values": [
            { "key": "ogTitle", "cssSelector": "meta[property=\"og:title\"]", "returnValue": "attribute", "attribute": "content" },
            { "key": "h1", "cssSelector": "h1" },
            { "key": "articleP", "cssSelector": "article p, section p", "returnArray": true }
          ]
        }
      }
    },
    {
      "id": "prepare",
      "name": "Prepare Content",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [-540, 200],
      "parameters": {
        "jsCode": "const title = $json.ogTitle || $json.h1 || 'Sin título';\nconst paras = Array.isArray($json.articleP) ? $json.articleP : ($json.articleP ? [$json.articleP] : []);\nlet content = paras.join('\\n');\ncontent = content.replace(/\\s+/g,' ').trim();\nif (content.length > 8000) content = content.slice(0, 8000) + '...';\nconst htmlRaw = $json.data || '';\nconst paywalled = /meteredContent|paywall|member-only|signupWall/i.test(htmlRaw);\nreturn [{ json: { url: $json.url, title, content, paywalled } }];"
      }
    },
    {
      "id": "if-paywall",
      "name": "Member-only?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [-340, 200],
      "parameters": {
        "conditions": { "booleans": [ { "value1": "={{$json.paywalled}}" } ] }
      }
    },
    {
      "id": "log-skip",
      "name": "Log (member-only)",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [-140, 80]
    },
    {
      "id": "shape-skip",
      "name": "Shape Output (skip)",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [60, 80],
      "parameters": {
        "assignments": {
          "assignments": [
            { "name": "title", "type": "string", "value": "={{$json.title}}" },
            { "name": "title_translate", "type": "string", "value": "Contenido solo para miembros" },
            { "name": "summary_translate", "type": "string", "value": "No se pudo acceder sin login." },
            { "name": "url", "type": "string", "value": "={{$json.url}}" }
          ]
        }
      }
    },
    {
      "id": "openai",
      "name": "OpenAI Chat (JSON)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [-140, 320],
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/chat/completions",
        "responseFormat": "json",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openAiApi",
        "sendBody": true,
        "jsonParameters": true,
        "options": { "timeout": 30000 },
        "bodyParametersJson": "={\n  \"model\": \"gpt-5-mini\",\n  \"response_format\": {\"type\":\"json_object\"},\n  \"temperature\": 0.2,\n  \"max_tokens\": 300,\n  \"messages\": [\n    {\"role\":\"system\",\"content\":\"Eres un asistente que devuelve exclusivamente JSON válido. Tarea: traducir el título al español y generar un resumen claro y conciso de máximo 3 frases en español. Responde con las claves exactas: title_translate y summary_translate.\"},\n    {\"role\":\"user\",\"content\": \"Título original: {{$json.title}}\\n\\nContenido:\\n{{$json.content}}\"}\n  ]\n}"
      },
      "credentials": {
        "openAiApi": { "id": "REPLACE_WITH_YOUR_CRED_ID", "name": "OpenAI API" }
      }
    },
    {
      "id": "parse",
      "name": "Parse OpenAI JSON",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [60, 320],
      "parameters": {
        "jsCode": "const choice = $json.choices?.;\nconst content = choice?.message?.content || '{}';\nlet obj;\ntry { obj = JSON.parse(content); } catch(e) { obj = { title_translate: 'Error de parseo', summary_translate: 'Salida no válida' }; }\nreturn [{ json: { url: $json.url, title: $json.title, ...obj } }];"
      }
    },
    {
      "id": "shape",
      "name": "Shape Output",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [260, 320],
      "parameters": {
        "assignments": {
          "assignments": [
            { "name": "title", "type": "string", "value": "={{$json.title}}" },
            { "name": "title_translate", "type": "string", "value": "={{$json.title_translate}}" },
            { "name": "summary_translate", "type": "string", "value": "={{$json.summary_translate}}" },
            { "name": "url", "type": "string", "value": "={{$json.url}}" }
          ]
        }
      }
    }
  ],
  "connections": {
    "Fetch Medium HTML": { "main": [[{ "node": "Extract Title + Text", "type": "main", "index": 0 }]] },
    "When executed by another node": { "main": [[{ "node": "Fetch Medium HTML", "type": "main", "index": 0 }]] },
    "Extract Title + Text": { "main": [[{ "node": "Prepare Content", "type": "main", "index": 0 }]] },
    "Prepare Content": { "main": [[{ "node": "Member-only?", "type": "main", "index": 0 }]] },
    "Member-only?": {
      "main": [
        [{ "node": "Log (member-only)", "type": "main", "index": 0 }],
        [{ "node": "OpenAI Chat (JSON)", "type": "main", "index": 0 }]
      ]
    },
    "Log (member-only)": { "main": [[{ "node": "Shape Output (skip)", "type": "main", "index": 0 }]] },
    "OpenAI Chat (JSON)": { "main": [[{ "node": "Parse OpenAI JSON", "type": "main", "index": 0 }]] },
    "Parse OpenAI JSON": { "main": [[{ "node": "Shape Output", "type": "main", "index": 0 }]] }
  }
}
