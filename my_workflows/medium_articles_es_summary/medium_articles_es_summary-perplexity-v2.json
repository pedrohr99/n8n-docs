{
  "name": "medium_articles_es_summary",
  "nodes": [
    {
      "parameters": {},
      "id": "37c82eb5-f4ad-49b9-b89f-53440ae630a1",
      "name": "When executed by another node",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        -1056,
        128
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "url": "={{$json[\"url\"]}}",
        "options": {
          "redirect": {},
          "timeout": 15000
        }
      },
      "id": "099eea04-bdc4-4add-acbb-2d7960354425",
      "name": "Fetch Medium HTML",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -848,
        128
      ]
    },
    {
      "parameters": {
        "operation": "extractHtmlContent",
        "extractionValues": {
          "values": [
            {
              "key": "ogTitle",
              "cssSelector": "meta[property=\"og:title\"]",
              "returnValue": "attribute",
              "attribute": "content"
            },
            {
              "key": "h1",
              "cssSelector": "h1"
            },
            {
              "key": "articleP",
              "cssSelector": "article p, section p",
              "returnArray": true
            }
          ]
        },
        "options": {}
      },
      "id": "98728a06-236f-488a-95a3-d0e596c395e1",
      "name": "Extract Title + Text",
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        -624,
        128
      ]
    },
    {
      "parameters": {
        "jsCode": "const title = $json.ogTitle || $json.h1 || 'Sin título';\nconst paras = Array.isArray($json.articleP) ? $json.articleP : ($json.articleP ? [$json.articleP] : []);\nlet content = paras.join('\\n');\ncontent = content.replace(/\\s+/g,' ').trim();\nif (content.length > 8000) content = content.slice(0, 8000) + '...';\nconst htmlRaw = $json.data || '';\nconst paywalled = /meteredContent|paywall|member-only|signupWall/i.test(htmlRaw);\nreturn [{ json: { url: $json.url, title, content, paywalled } }];"
      },
      "id": "78442ed2-ea0e-4198-8630-60af06a76ebb",
      "name": "Prepare Content",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -400,
        128
      ]
    },
    {
      "parameters": {
        "conditions": {
          "booleans": [
            {
              "value1": "={{$json.paywalled}}"
            }
          ]
        },
        "options": {}
      },
      "id": "923b768b-cec4-4381-a941-6f04cb4017d1",
      "name": "Member-only?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -208,
        128
      ]
    },
    {
      "parameters": {},
      "id": "2a572ccf-dbf8-4bef-8579-b1b3946b3936",
      "name": "Log (member-only)",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        0,
        0
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "name": "title",
              "type": "string",
              "value": "={{$json.title}}"
            },
            {
              "name": "title_translate",
              "type": "string",
              "value": "Contenido solo para miembros"
            },
            {
              "name": "summary_translate",
              "type": "string",
              "value": "No se pudo acceder sin login."
            },
            {
              "name": "url",
              "type": "string",
              "value": "={{$json.url}}"
            }
          ]
        },
        "options": {}
      },
      "id": "edaeb9ed-5c98-4f22-a131-16376377c735",
      "name": "Shape Output (skip)",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        208,
        0
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/chat/completions",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openAiApi",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {}
          ]
        },
        "options": {
          "timeout": 30000
        }
      },
      "id": "a95544f6-95b9-4d94-bd29-cd6d7aabe879",
      "name": "OpenAI Chat (JSON)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        0,
        240
      ]
    },
    {
      "parameters": {
        "jsCode": "const choice = $json.choices?.;\nconst content = choice?.message?.content || '{}';\nlet obj;\ntry { obj = JSON.parse(content); } catch(e) { obj = { title_translate: 'Error de parseo', summary_translate: 'Salida no válida' }; }\nreturn [{ json: { url: $json.url, title: $json.title, ...obj } }];"
      },
      "id": "6d9d09e0-3a0c-44ed-9cf1-97c030ee528f",
      "name": "Parse OpenAI JSON",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        208,
        240
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "name": "title",
              "type": "string",
              "value": "={{$json.title}}"
            },
            {
              "name": "title_translate",
              "type": "string",
              "value": "={{$json.title_translate}}"
            },
            {
              "name": "summary_translate",
              "type": "string",
              "value": "={{$json.summary_translate}}"
            },
            {
              "name": "url",
              "type": "string",
              "value": "={{$json.url}}"
            }
          ]
        },
        "options": {}
      },
      "id": "1a78dec2-98ac-4980-aacd-78e0b738cf09",
      "name": "Shape Output",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        400,
        240
      ]
    }
  ],
  "pinData": {
    "When executed by another node": [
      {
        "json": {
          "url": "https://medium.com/@mehulgupta_7991/meta-dino-v3-the-ultimate-vision-ai-for-every-image-task-cf5ffc30a221"
        }
      }
    ]
  },
  "connections": {
    "Fetch Medium HTML": {
      "main": [
        [
          {
            "node": "Extract Title + Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When executed by another node": {
      "main": [
        [
          {
            "node": "Fetch Medium HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Title + Text": {
      "main": [
        [
          {
            "node": "Prepare Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Content": {
      "main": [
        [
          {
            "node": "Member-only?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Member-only?": {
      "main": [
        [
          {
            "node": "Log (member-only)",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "OpenAI Chat (JSON)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log (member-only)": {
      "main": [
        [
          {
            "node": "Shape Output (skip)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat (JSON)": {
      "main": [
        [
          {
            "node": "Parse OpenAI JSON",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse OpenAI JSON": {
      "main": [
        [
          {
            "node": "Shape Output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "683677e5-4556-4832-97ae-38c12523ac7b",
  "meta": {
    "instanceId": "a396a459e20e70dadf88b2d8f204762d2d80680fe1414733547fa53f595d718e"
  },
  "id": "KRCc0Jm59F6dd23J",
  "tags": []
}